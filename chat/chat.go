// Code generated by goctl. DO NOT EDIT!
// Source: chat.proto

//go:generate mockgen -destination ./chat_mock.go -package chat -source $GOFILE

package chat

import (
	"context"

	"github.com/acger/chat-svc/template"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MsgSaveReq     = template.MsgSaveReq
	ChatMessage    = template.ChatMessage
	ChatUser       = template.ChatUser
	ChatHistoryRsp = template.ChatHistoryRsp
	ChatNumberReq  = template.ChatNumberReq
	CHSaveReq      = template.CHSaveReq
	Rsp            = template.Rsp
	MsgListReq     = template.MsgListReq
	MsgListRsp     = template.MsgListRsp
	ChatHistoryReq = template.ChatHistoryReq
	ChatNumberRsp  = template.ChatNumberRsp

	Chat interface {
		MessageSave(ctx context.Context, in *MsgSaveReq) (*Rsp, error)
		MessageList(ctx context.Context, in *MsgListReq) (*MsgListRsp, error)
		ChatHistoryList(ctx context.Context, in *ChatHistoryReq) (*ChatHistoryRsp, error)
		ChatNumber(ctx context.Context, in *ChatNumberReq) (*ChatNumberRsp, error)
		ChatHistorySave(ctx context.Context, in *CHSaveReq) (*Rsp, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) MessageSave(ctx context.Context, in *MsgSaveReq) (*Rsp, error) {
	client := template.NewChatClient(m.cli.Conn())
	return client.MessageSave(ctx, in)
}

func (m *defaultChat) MessageList(ctx context.Context, in *MsgListReq) (*MsgListRsp, error) {
	client := template.NewChatClient(m.cli.Conn())
	return client.MessageList(ctx, in)
}

func (m *defaultChat) ChatHistoryList(ctx context.Context, in *ChatHistoryReq) (*ChatHistoryRsp, error) {
	client := template.NewChatClient(m.cli.Conn())
	return client.ChatHistoryList(ctx, in)
}

func (m *defaultChat) ChatNumber(ctx context.Context, in *ChatNumberReq) (*ChatNumberRsp, error) {
	client := template.NewChatClient(m.cli.Conn())
	return client.ChatNumber(ctx, in)
}

func (m *defaultChat) ChatHistorySave(ctx context.Context, in *CHSaveReq) (*Rsp, error) {
	client := template.NewChatClient(m.cli.Conn())
	return client.ChatHistorySave(ctx, in)
}
